{
    "contents" : "\n# Control Structures ------------------------------------------------------\n\n# if-else\nx <- rnorm(1, mean=3, sd=1)\n\ny <- if(x>3){\n        print(\">3 \")\n        x = 3\n      }else{\n        print(\"<3\")\n        x = 0\n      }\n\nx <- rnorm(1, mean=3, sd=1)\ny <- rnorm(1, mean=3, sd=1)\nifelse(x>3 & y>3, \">3\", \"<3\")\nifelse(x>3 | y>3, \">3\", \"<3\")\n\n\n\n# for loop ----------------------------------------------------------------\nx <- c(\"a\", \"b\", \"c\", \"d\")\n\nfor(i in 1:4) {\n  print(x[i])\n}\n\nfor(i in seq_along(x)) {\n  print(x[i])\n}\n\nfor(letter in x) {\n  print(letter)\n}\n\nfor(i in x){print(i)}\n\nfor(i in 1:4) print(x[i])\n\n## nested operations\nx <- matrix(1:6, 2, 3)\nfor(i in seq_len(nrow(x))) {\n  for(j in seq_len(ncol(x))) {\n    print(x[i, j])\n  }   \n}\n\n\n# while -------------------------------------------------------------------\n\ncount <- 0\nwhile(count < 10) {\n  print(count)\n  count <- count + 1\n}\n\n\n## Multiple Controls\nz <- 5\n\nwhile(z >= 3 && z <= 10) {\n  print(z)\n  coin <- rbinom(1, 1, 0.5)\n  \n  if(coin == 1) {  ## random walk\n    z <- z + 1\n  } else {\n    z <- z - 1\n  } \n}\n\n\nz <- 5\nwhile(z <= 10) {\n  print(z)\n  coin <- rbinom(1, 1, 0.25)\n  if(coin == 1) {  ## random walk\n    z <- z + 1\n  } else if(z < 3) { break } else { z <- z-1 } \n}\n\n\n# next and return\\ --------------------------------------------------------\n\nfor(i in 1:100) {\n  if(i <= 20) {\n    ## Skip the first 20 iterations\n    next \n  }\n  print(i+5)\n  \n  incr <- function(i){\n    x <- 1\n    x <- c(x, i)\n  return(x)\n  \n  incr(i)}\n}  \n\nfor(i in 1:100) {\n  if(i <= 20) {\n    ## Skip the first 20 iterations\n    next \n  }\n  ## Do something here\n}\n\nincr <- function(i){\n  x <- 1\n  x <- list(c(x, i))\n  return(x)}\n\n\n#  ------------------------------------------------------------------------\n\nSwitch by Tag\nIf expr has a character string value then the tags are searched\nfor one that is an exact match. If there is one the\ncorresponding code block is evaluated and its value returned.\n\nx = rnorm(10)\nloc.est = \"median\"\nswitch(loc.est,\n         median = median(x),\n         mean = mean(x))\n\nmean(x)\n\nmedian(x)\n\n\n\n# Functions --------------------------------------------------------------\n\nmyNameFunc <- function(FirstName, LastName){\n    NameCh1 <- sapply(1:nchar(FirstName), function(x) substr(FirstName, x, x))\n    NameCh2 <- sapply(1:nchar(LastName), function(x) substr(LastName, x, x))\n    \n    return(intersect(NameCh1, NameCh2))\n}\n\nargs(lm)\n\nmyplot <- function(x, y, type = \"l\", ...) {\n  plot(x, y, type = type, ...)\n}\n\n\n\n# Dates -------------------------------------------------------------------\n\nx <- as.Date(\"1970-01-01\")\n\nx <- Sys.time()\nx\n## [1] \"2013-01-24 22:04:14 EST\"\np <- as.POSIXlt(x)\nnames(unclass(p))\n## [1] \"sec\"   \"min\"   \"hour\"  \"mday\"  \"mon\"\n## [6] \"year\"  \"wday\"  \"yday\"  \"isdst\"\np$sec\n## [1] 14.34\n\n\n\ndatestring <- c(\"January 10, 2012 10:40\", \"December 9, 2011 12:49\")\nx <- strptime(datestring, \"%B %d, %Y %H:%M\")\nx\n## [1] \"2012-01-10 10:40:00\" \"2011-12-09 12:49:00\"\nclass(x)\n## [1] \"POSIXlt\" \"POSIXt\"\n",
    "created" : 1405166119972.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3756583569",
    "id" : "8CC8A25D",
    "lastKnownWriteTime" : 1405179361,
    "path" : "D:/Tutoring R/Control Structures and Functions.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}